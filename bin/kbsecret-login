#!/usr/bin/env ruby
# frozen_string_literal: true

require "kbsecret"

include KBSecret

cmd = CLI.new do
  slop do |o|
    o.banner = <<~EOS
      Usage:
        kbsecret login [options] <record [record ...]>
    EOS

    o.string "-s", "--session", "the session to search in", default: :default
    o.bool "-a", "--all", "retrieve all login records, not just listed ones"
    o.bool "-x", "--terse", "output in label<sep>username<sep>password format"
    o.string "-i", "--ifs", "separate terse fields with this string", default: CLI.ifs
  end

  dreck do
    list :string, :labels
  end

  ensure_session!
end

records = cmd.session.records :login

selected_records = if cmd.opts.all?
                     records
                   else
                     records.select do |record|
                       cmd.args[:labels].include? record.label
                     end
                   end

cmd.warn "No records selected." if selected_records.empty?

selected_records.each do |record|
  if cmd.opts.terse?
    fields = %i[label username password].map { |m| record.send(m) }
    puts fields.join(cmd.opts[:ifs])
  else
    puts <<~EOS
      Label: #{record.label}
      \tUsername: #{record.username}
      \tPassword: #{record.password}
    EOS
  end
end
